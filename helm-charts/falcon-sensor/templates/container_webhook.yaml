{{- if .Values.container.enabled }}
{{- $fullName := "falcon-injector" -}}
{{- $certValid := (.Values.container.certExpiration | int) -}}
{{- $altNames := list (  printf "%s.%s.svc" $fullName .Release.Namespace ) (  printf "%s.%s.svc.cluster.local" $fullName .Release.Namespace ) ( printf "%s.%s" $fullName .Release.Namespace ) ( printf "%s" $fullName ) -}}
{{- $ca := genCA ( printf "%s ca" .Release.Namespace ) $certValid -}}
{{- $cert := genSignedCert ( printf "%s.%s.svc" $fullName .Release.Namespace ) nil $altNames $certValid $ca -}}
---
apiVersion: v1
kind: Secret
metadata:
  name: falcon-injector-tls
  namespace: {{ .Release.Namespace }}
type: Opaque
data:
  tls.crt: {{ $cert.Cert | b64enc }}
  tls.key: {{ $cert.Key | b64enc }}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: falcon-injector.falcon-system.svc
webhooks:
  - name: falcon-injector.falcon-system.svc
    admissionReviewVersions: ["v1", "v1beta1"]
    sideEffects: None
    namespaceSelector:
      matchExpressions:
      - key: sensor.falcon-system.crowdstrike.com/injection
        operator: {{ if .Values.container.disableNSInjection }}In{{ else }}NotIn{{- end }}
        values: ["{{ if .Values.container.disableNSInjection }}enabled{{ else }}disabled{{- end }}"]
    clientConfig:
      service:
        name: falcon-injector
        namespace: {{ .Release.Namespace }}
        path: "/mutate"
      caBundle: {{ $ca.Cert | b64enc }}
    failurePolicy: Fail
    rules:
      - operations: [ "CREATE" ]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["pods"]
    timeoutSeconds: 30
{{- end }}
