# Default values for falcon-sensor.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

node:
  # When enabled, Helm chart deploys the Falcon Sensors to Kubernetes nodes
  enabled: true

  daemonset:
    # Annotations to apply to the daemonset
    annotations: {}

    # additionals labels
    labels: {}

    updateStrategy: RollingUpdate

  image:
    repository: falcon-node-sensor
    pullPolicy: Always
    pullSecrets: {}
    # Overrides the image tag whose default is the chart appVersion.
    tag: "latest"

  # Override various naming aspects of this chart
  # Only edit these if you know what you're doing
  nameOverride: ""
  fullnameOverride: ""

  podAnnotations: {}

  # How long to wait for Falcon pods to stop gracefully
  terminationGracePeriod: 10

container:
  # When enabled, Helm chart deploys the Falcon Container Sensor to Pods through Webhooks
  enabled: false

  image:
    repository: falcon-sensor
    pullPolicy: Always
    # Set to true if connecting to a registry that requires authentication
    pullSecrets:
      enable: false
      # Configure the list of namespaces that should have access to pull the Falcon
      # sensor from a registry that requires authentication. This is a comma separated
      # list. For example:
      #
      # namespaces: ns1,ns2,ns3
      namespaces:

      # Value must be base64
      # The base64 encoded string of the docker config json for the pull secret can be
      # gotten through:
      # $ cat ~/.docker/config.json | base64 -
      registryConfigJSON:

    # Overrides the image tag whose default is the chart appVersion.
    tag: "latest"

  resources:
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
    requests:
      cpu: 250m
      memory: 512Mi

  certificates:
    autogenerate: true
    # base64 encoded CA certificate
    caBundle:
    # base64 encoded TLS Key
    tlsKey:
    # base64 encoded TLS
    tlsCert:

falcon:
  cid:
  aid:
  apd:
  aph:
  app:
  trace:
  feature:
  update:
  message_log:
  billing:
  tags:
  assert:
  memfail_grace_period:
  memfail_every_n:
  provisioning_token:
